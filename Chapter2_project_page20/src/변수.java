/*
 * page 20
 * 	변수
 * 	 1. 변수 설정 / 초기값 => 변경이 가능한 값, 상수 : 변경할 수 없는 값
 * 	 	final int a=10; final 붙으면 절대 변경할 수 없음. 
 * 		--------------- javascript는 const a = 10이라 함. 
 * 		1) 변수 설정
 * 			데이터형(자료형) 변수명 = 값
 * 			------------ 메모리 크기
 * 			데이터형
 * 			--------------------------------------------------------------
 * 			종류 / 크기  1byte(8bit) 2byte(16bit) 4byte(32bit) 8byte(64bit)
 * 			--------------------------------------------------------------
 * 			논리형 		**boolean
 * 			(조건문)
 * 			--------------------------------------------------------------
 * 			정수형		**byte		short		***int(default)	***long
 * 												------------------------
 * 												구분(L,l)
 * 			--------------------------------------------------------------
 * 			실수형								float		***double(default)
 * 												-------------------------------
 * 												구분(F,f)
 * 			--------------------------------------------------------------
 * 			문자형				***char
 * 			--------------------------------------------------------------
 * 			
 * 			데이터형의 크기 비교 => 형변환
 * 			boolean은 제외
 * 			byte < short < int < long < float < double
 * 					char(연산처리시 정수형으로 변경)
 * 					ex) 'A' + 'B' 
 * 						---   ----
 * 						65    66    ==> 131
 * 						=> 'A' ==> 65
 * 							'a' ==> 97
 * 							'0' ==> 48 $문자 0이라서 48$
 * 			*** byte크기로 결정되는 것이 아니고 숫표현이 많은 순서
 * 				long(8byte) < float(4byte) 왜????
 * 				1				1.000000 (소수점 6자리) , double(8byte) (소수점 15자리)
 * 								---------소수까지 붙어서
 * 				double d = 'A' ==> 65.0이 저장
 * 				int a = 10.5(오류) $'=' 뒤에가 크면 오류가 남$ => 큰 데이터를 저장하면 오류발생
 * 				
 * 			*** 사용처 
 * 
 * 		*** 25page 식별자 (메모리 이름 => 중복이 있으면 않된다)
 * 			1) 알파벳, 한글 시작 (단 알파벳은 대소문자 구분)
 * 			2) 숫자 사용이 가능 (앞에 사용 금지)
 * 			3) 특수문자( _ )
 *			4) 키워드는 사용 금지 			
 * 			** 변수는 소문자로 시작한다. (26page)
 * 
 * 		프로그램의 순서(Application, Web, Mobile)
 * 		1) 변수설정
 * 		2) 제어문
 * 		3) 연산처리
 * 		4) 결과값
 * 
 * 		*** 데이터 표현법
 * 		1) 정수 ==> 10,20,30(byte, int, short), 40L(40l) => long
 * 		2) 문자 ==> 'A', 'B', '홍'...
 * 		3) 실수 ==> 10.5, 10.7(long), 10.8F(f)
 * 		-----------------------------------------------범위
 * 					범위를 벗어나면 오버플로우 발생.
 * 					ex)1~10 범위, 숫자는 12이면 2자리에 12가 들어감.
 * 		4) 논리 ==> true/false
 * 		
 * 		byte b1 = 100
 * 		byte b2 = 200
 * 		byte b3 = b1+b2 ==> 오류
 *		-----
 *		int로 바꾸어주어야함.
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 			
 * $별표 표시는 꼭 외우고, 나머지도 외우긴해라$ 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 */
public class 변수 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/*
		 * System.out.println((byte)300); System.out.println('A'+'B');
		 */
		// 국어, 영어, 수학 ==> 저장
		// 총점, 평균을 구해서 출력
		// 변수는 3~5개. 출력은 변수가 없어도 되는 것. 
		// 국어, 영어, 수학 ==> byte , short, int, long 중에 아무거나 사용해도 ok. 
		//					------------------------
		//					점수가 100점 만점이라. int가 default이긴함. 
		// 과거에는 메모리 절약을 위해 byte를 많이 썼는데, 최근에는 int를 써서 속도를 높이기 때문에 잘 짠 코드라고 함. 
		// 총점 ==> short, int, long ==> int
		// 평균 ==> float, double
		// 재사용, 가독성, 최적화가 가능한지가 중요. 
		// int kor = 80;
		// 데이터형(자료형) 변수명 = 값(초기화)
		// int eng = 90;
		// int math = 100;
		//---------------
		// 데이터형이 같다면
		int kor = 85, eng = 97, math = 87;
		//---------------
		// 값이 동일
		//int kor, eng, math;
		//kor = eng = math = 100;
		/*
		 * 1. 선언과 동시에 초기화. => 임의로 값을 지정
		 * int a = 10;
		 * 2. 선언하고
		 * int a;
		 * 초기화
		 * a = 10; ==> 입력값을 받는 값, 외부에서 데이터를 읽어서 처리, 난수
		 */
		// 메모리 0번에 가장 가까운 변수는 모른다. 
		// 메모리의 빈 공백을 찾아서 저장하기 때문임. 
		// 그래서 메모리위치에 변수명을 붙이는 것. 
		// 순차적으로 저장하지 않는다. 
		// c언어는 알지만 java는 어디에 저장되어있는지 모른다. 
		
		System.out.println("국어점수:"+kor);//문자열 결합
		System.out.println("영어점수:"+eng);
		System.out.println("수학점수:"+math);
		System.out.println("총점:"+kor+eng+math);// 총점 : 859788
		System.out.println("총점:"+(kor+eng+math));// 괄호가 꼭 필요!
		System.out.println("평균:"+(kor+eng+math)/3.0); //평균을 구할 때는 실수로 나누어야함. 정수/정수 = 정수
		System.out.printf("평균:%.2f\n",(kor+eng+math)/3.0);
		
		
		
		
		
		
		
	}

}
